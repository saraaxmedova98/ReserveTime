# Generated by Django 3.0.8 on 2020-08-08 19:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=250, verbose_name='Company Name')),
                ('phone_number', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('city_location', models.CharField(max_length=150, verbose_name='City')),
                ('province_location', models.CharField(max_length=150, verbose_name='Province')),
                ('country_location', models.CharField(max_length=150, verbose_name='Country')),
                ('work_hours_from', models.TimeField(blank=True, null=True, verbose_name='Start Time')),
                ('work_hours_to', models.TimeField(blank=True, null=True, verbose_name='Finish Time')),
                ('cuisines', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cuisines')),
                ('dining_style', models.CharField(blank=True, max_length=50, null=True, verbose_name='Dining Style')),
                ('parking_details', models.TextField(blank=True, null=True, verbose_name='Parking details')),
                ('public_transit', models.TextField(blank=True, null=True, verbose_name='Public transit')),
                ('payment_options', models.CharField(blank=True, choices=[('AMEX', 'AMEX'), ('DinersClub', 'Diners Club'), ('MasterCard', 'MasterCard'), ('Visa', 'Visa')], max_length=50, null=True, verbose_name='Payment Options')),
                ('executive_chef', models.CharField(blank=True, max_length=50, null=True, verbose_name='Executive chef')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('private_party_contact', models.CharField(blank=True, max_length=150, null=True, verbose_name='Private party contact')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='')),
            ],
            options={
                'verbose_name': 'Comapany',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Menu Category',
                'verbose_name_plural': 'Menu Categories',
            },
        ),
        migrations.CreateModel(
            name='Portion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_id', models.IntegerField(verbose_name='Menu Id')),
                ('portion_count', models.IntegerField(verbose_name='Portion Count')),
            ],
            options={
                'verbose_name': 'Portion',
                'verbose_name_plural': 'Portions',
            },
        ),
        migrations.CreateModel(
            name='TableDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'TableDate',
                'verbose_name_plural': 'TableDates',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free_time', models.TimeField(verbose_name='Free Time')),
                ('reserved', models.BooleanField(default=False, verbose_name='Reserved')),
            ],
            options={
                'verbose_name': 'Time',
                'verbose_name_plural': 'Times',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(verbose_name='Size')),
                ('table_place', models.CharField(choices=[('outside', 'Outside'), ('inside', 'Inside')], max_length=50, verbose_name='Table Place')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_table', to=settings.AUTH_USER_MODEL, verbose_name='Company')),
                ('dates', models.ManyToManyField(related_name='table', to='restaurant.TableDate', verbose_name='Dates')),
                ('times', models.ManyToManyField(to='restaurant.Time', verbose_name='Time')),
            ],
            options={
                'verbose_name': 'Table',
                'verbose_name_plural': 'Tables',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_id', models.IntegerField(blank=True, null=True, verbose_name='Table Id')),
                ('reserved_time', models.TimeField(verbose_name='Reserved Time')),
                ('reserved_date', models.DateField(blank=True, null=True, verbose_name='Reserved Date')),
                ('total_price', models.IntegerField(blank=True, null=True, verbose_name='Total Price')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation', to='restaurant.Company', verbose_name='Company')),
                ('portions', models.ManyToManyField(related_name='reservation_portions', to='restaurant.Portion', verbose_name='Portions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservation', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='company-photos/', verbose_name='Company Photo')),
                ('photo_url', models.URLField(verbose_name='Photo Url')),
                ('photo_type', models.CharField(choices=[('food', 'Food'), ('drink', 'Drink'), ('interior', 'Interior'), ('exterior', 'Exterior')], max_length=50, verbose_name='type')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_owner', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Photo',
                'verbose_name_plural': 'Photos',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('price', models.IntegerField(verbose_name='Price')),
                ('description', models.TextField(verbose_name='Description')),
                ('selected', models.BooleanField(default=False, verbose_name='Selected')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu', to=settings.AUTH_USER_MODEL, verbose_name='Company')),
                ('menu_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu', to='restaurant.MenuCategory', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Menu',
                'verbose_name_plural': 'Menus',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Comment Text')),
                ('comment_img', models.ImageField(upload_to='comment-images/', verbose_name='Comment Image')),
                ('commented_at', models.DateTimeField(auto_now_add=True, verbose_name='Written Date')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_comment', to='restaurant.Company', verbose_name='Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comment', to='account.Customer', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
